{
  "comments": [
    {
      "key": {
        "uuid": "03cdaf4f_687dfaae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 20
      },
      "lineNbr": 10,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "Extra space.",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 10,
        "endChar": 18
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f486479_9cd880cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 20
      },
      "lineNbr": 10,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03cdaf4f_687dfaae",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 10,
        "endChar": 18
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e8c234b_baa5129a",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator_unittest.cpp",
        "patchSetId": 20
      },
      "lineNbr": 142,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "Does this need to be updated?",
      "range": {
        "startLine": 142,
        "startChar": 39,
        "endLine": 142,
        "endChar": 41
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54dc3ce_b217a280",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator_unittest.cpp",
        "patchSetId": 20
      },
      "lineNbr": 142,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e8c234b_baa5129a",
      "range": {
        "startLine": 142,
        "startChar": 39,
        "endLine": 142,
        "endChar": 41
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73fcd6fd_71edae1f",
        "filename": "fpdfsdk/fpdfannot.cpp",
        "patchSetId": 20
      },
      "lineNbr": 327,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T21:06:16Z",
      "side": 1,
      "message": "Does it make sense to check |index| again GetPageObjectList()-\u003esize(), to reject obvious out of bound values of |index| ?",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fe88506_ff190caf",
        "filename": "fpdfsdk/fpdfannot.cpp",
        "patchSetId": 20
      },
      "lineNbr": 327,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73fcd6fd_71edae1f",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3fbd9ed_1ae46c93",
        "filename": "fpdfsdk/fpdfannot_embeddertest.cpp",
        "patchSetId": 20
      },
      "lineNbr": 419,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "So this basically skips FPDF_FFLDraw() ?",
      "range": {
        "startLine": 419,
        "startChar": 53,
        "endLine": 419,
        "endChar": 60
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be50d8c4_ac80a058",
        "filename": "fpdfsdk/fpdfannot_embeddertest.cpp",
        "patchSetId": 20
      },
      "lineNbr": 419,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Yea, I don\u0027t think it matters here because we don\u0027t have form fill things anyways.",
      "parentUuid": "a3fbd9ed_1ae46c93",
      "range": {
        "startLine": 419,
        "startChar": 53,
        "endLine": 419,
        "endChar": 60
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34adcc71_68960063",
        "filename": "fpdfsdk/fsdk_define.h",
        "patchSetId": 20
      },
      "lineNbr": 71,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "nit: Make this consistent with line 69.",
      "range": {
        "startLine": 71,
        "startChar": 66,
        "endLine": 71,
        "endChar": 73
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b271952d_2e2c515f",
        "filename": "fpdfsdk/fsdk_define.h",
        "patchSetId": 20
      },
      "lineNbr": 71,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34adcc71_68960063",
      "range": {
        "startLine": 71,
        "startChar": 66,
        "endLine": 71,
        "endChar": 73
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c5cf02d_42998424",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "Do we have a test for this case?",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11f7e519_64164dd7",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T21:06:16Z",
      "side": 1,
      "message": "Rather, is it up to the developer to never do this and potentially shoot themselves in the foot, or do we check?",
      "parentUuid": "4c5cf02d_42998424",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b40721b4_358ebb21",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "I don\u0027t have a test for this case. I tried to make one, but it will just get into segfaults and other messy situations, because each |path| is owned by an |annot|. I\u0027m not sure how to check this in our code either, unless we keep a list of all the CPDF_AnnotContext being used. I thought if a developer tries to do this, they will run into messy situations anyways so they should know.\nAny suggestions?",
      "parentUuid": "11f7e519_64164dd7",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a61a46d_3346af24",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-29T00:19:06Z",
      "side": 1,
      "message": "FPDFPageObj_CreateNewPath() can keep a \"unbound\" list of all the path objects it hands out, with objects remaining on that list as long as they don\u0027t belong to an annot. Then FPDFAnnot_SetPathObject() can figure out if the path object came from the unbound list, the given annot, or somewhere else.",
      "parentUuid": "b40721b4_358ebb21",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2619a544_65767c0b",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-29T16:03:34Z",
      "side": 1,
      "message": "So you are saying we can add the newly created path objects to a list, and then when we call FPDFAnnot_AppendPathObject() or FPDFPage_InsertObject() on an object, we remove the object from the list.\nQuestion: Who could actually own the list? Since FPDFPageObj_CreateNewPath() is a public API. \nAlso, is it worth doing these to prevent developers from doing this?\nEither way, if you think it\u0027s worth it, maybe we can explore this in a later CL?",
      "parentUuid": "1a61a46d_3346af24",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00112ef3_a9088784",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 117,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-29T22:14:28Z",
      "side": 1,
      "message": "It will have to be a global list, since objects returned by FPDFPageObj_CreateNewPath() aren\u0027t bound to any document/page/form/annot/etc.\n\nI don\u0027t think it changes the structure of the API, so we can always do it later, if we find out developers have trouble using the API properly and ends up causing crashes. With the check, those crashes would turn into API call failures.",
      "parentUuid": "2619a544_65767c0b",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45898941_e29f35cb",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T21:06:16Z",
      "side": 1,
      "message": "Are you trying to say something about object ownership here?",
      "range": {
        "startLine": 120,
        "startChar": 62,
        "endLine": 120,
        "endChar": 69
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d63650ee_70a43527",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "I wasn\u0027t, but good point about mentioning ownership. I added a comment above, and hopefully this \"have\" doesn\u0027t confuse things.",
      "parentUuid": "45898941_e29f35cb",
      "range": {
        "startLine": 120,
        "startChar": 62,
        "endLine": 120,
        "endChar": 69
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17b6e1c5_d8da8fc4",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-29T00:19:06Z",
      "side": 1,
      "message": "So I\u0027m still thinking about having the UpdatePathObject() and AppendNewPathObject() split. Especially now that passing |path| sometimes transfers ownership, and sometimes does not. If this was a C++11 API, we would have:\n\nUpdatePathObject(..., PageObject* path);\nAppendNewPathObject(..., std::unique_ptr\u003cPageObject\u003e path);\n\nwhich shows the ownership semantics.",
      "parentUuid": "d63650ee_70a43527",
      "range": {
        "startLine": 120,
        "startChar": 62,
        "endLine": 120,
        "endChar": 69
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b565aa_cd096002",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-29T16:03:34Z",
      "side": 1,
      "message": "I split it up to Update and Append, let\u0027s see how this will look.",
      "parentUuid": "17b6e1c5_d8da8fc4",
      "range": {
        "startLine": 120,
        "startChar": 62,
        "endLine": 120,
        "endChar": 69
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "692c7088_b6383067",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 130,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "What does this return on failure?",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de54cfb0_b821210e",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 130,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "It returns 0 on failure. \n(We had a similar discussion about whether to return 0 vs. -1 and whether to have a comment reflecting the value for failure for FPDFPage_GetAnnotCount() before, and the conclusion was that, if we don\u0027t have e.g. annotation stream, then technically we do have 0 path objects, and we don\u0027t need another comment reflecting this.)",
      "parentUuid": "692c7088_b6383067",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a591b71_9244a2ef",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-06-27T20:35:07Z",
      "side": 1,
      "message": "Should this one be marked Experimental too?",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69500beb_f92f4f1a",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T20:36:18Z",
      "side": 1,
      "message": "I think this one is fine, because we will need separate functions for e.g. GetTextObjectCount(), since it will have to check IsText() instead of IsPath().",
      "parentUuid": "6a591b71_9244a2ef",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1c0cf72_8f8af5ae",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 20
      },
      "lineNbr": 131,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T20:54:07Z",
      "side": 1,
      "message": "As per offline discussion, this will probably become GetObjectCount() later, so marked it as experimental too.",
      "parentUuid": "69500beb_f92f4f1a",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "471b6f6d_7484a373",
        "filename": "testing/embedder_test.h",
        "patchSetId": 20
      },
      "lineNbr": 108,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "Since the form handle is a document level object, assuming you keep it, please order this as: handle, page, flags.",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c18b78_ab116f71",
        "filename": "testing/embedder_test.h",
        "patchSetId": 20
      },
      "lineNbr": 108,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-27T20:57:02Z",
      "side": 1,
      "message": "Just |handle|",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1933c3_62624fb5",
        "filename": "testing/embedder_test.h",
        "patchSetId": 20
      },
      "lineNbr": 108,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0c18b78_ab116f71",
      "range": {
        "startLine": 108,
        "startChar": 58,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e28151e_aad6da34",
        "filename": "testing/embedder_test.h",
        "patchSetId": 20
      },
      "lineNbr": 108,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-27T22:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "471b6f6d_7484a373",
      "revId": "51c3199d55478ca4fc3d4cc6842ea36be2c31efb",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}