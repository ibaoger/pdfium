{
  "comments": [
    {
      "key": {
        "uuid": "d6e81ae1_10a09411",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 48,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "This seems specific to dictionary iterator, can it go into that class?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2a50b2a_79fdaf73",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 48,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "No this is universal iterator, which allow us iterate on any object type. But needs some mechanism to know where we in current moment, and i cannot merge indexes and keys, but still want the universality.",
      "parentUuid": "d6e81ae1_10a09411",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6132b1e9_879f0be2",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "This is only needed by array iterator so can it go into that class?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c9d002b_e685738a",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "See above",
      "parentUuid": "6132b1e9_879f0be2",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9ed897c_9283dc31",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Do we need to store stream_dict_? Can we just store a bool finished_ and use that instead? Then Start() does nothing and this can set finsihed_ \u003d true and return object()-\u003eGetDict()?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfeeb911_4237a5ca",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9ed897c_9283dc31",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "434260c3_391a3748",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 130,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Is the index ever used? Can we just remove it?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca15c829_0d6bed94",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 130,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "In far plans to use it. But for now store it for uniform with dictionary key.",
      "parentUuid": "434260c3_391a3748",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbc5cac5_27e37ca4",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Should  a Reference walk to the thing we\u0027re referencing?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1658916_45c301f8",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "No, this is just helper for walk not within Referenced objects.\nCurrently,  I do not see cases when we needs walk into Referenced objects like this helper.\nIf we will be needs it, i think we can update this class to allow that.",
      "parentUuid": "dbc5cac5_27e37ca4",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77c3cac4_431fc4b2",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 181,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Do we use dict_key_ anywhere? can we just drop this and storing it in the object?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3acd5e89_208b5eec",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 181,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "No, in plan use it for checking current iterator type.\nFor expample:\n\nwhile(auto obj \u003d walker.GetNext()) {\n  If(walker.GetDictKey() \u003d\u003d \"Parent\") {\n    // skip it\n    walker.SkipEnterIntoCurrentObject();\n    continue;\n  }\n  // ...\n}",
      "parentUuid": "77c3cac4_431fc4b2",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8411909a_b34d7322",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 191,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "This is more then SkipWalkIntoCurrent isn\u0027t it? If we\u0027ve walked half the children of a node and we call this we\u0027ll skip the walk into the remaining children?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a27e7d6c_0a386cd5",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.cpp",
        "patchSetId": 14
      },
      "lineNbr": 191,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "No, if we entered into the node, we walk all childrens from it. But can skip enter into child node to walk on grandchildrens\n\nFor example:\nWe have dictionary with 2 arrays and two numbers\n\u003c\u003c /Arr [1 2 3 4 5 ] /ExcludeArr [ 6 7 8 9 ]   /Num1 11 /Num2 17 \u003e\u003e\n\nFor summ of all numbers exclude \"ExcludeArr\" array we can do:\n\nint sum \u003d 0;\nwhile(auto obj \u003d walker.GetNext()) {\n  If(walker.GetDictKey() \u003d\u003d \"ExcludeArr\") {\n    // skip it\n    walker.SkipEnterIntoCurrentObject();\n    continue;\n  }\n  if (obj-\u003eIsNumber() {\n   sum +\u003d obj-\u003eGetInteger();\n  }\n}\n\nsum will be (1+2+3+4+5)+11+17 (just the 6,7,8,9 will be skipped)",
      "parentUuid": "8411909a_b34d7322",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b238400_3f28cf34",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Can we just create an interface here and remove these class definitions, then in the .cpp file put all the concrete iterators into the anonymous namespace?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ecbcff1_af5504f8",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "The SubObjectsIterator is private declaration.\nTo override it we need access to private scope.\nIn other case we have:\ncannot access private class declared in class \u0027CPDF_ObjectWalker\u0027",
      "parentUuid": "9b238400_3f28cf34",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b56cdfe_047ecc14",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.h",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "nit: SubobjectIterator",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcf2e057_40e5a4f0",
        "filename": "core/fpdfapi/parser/cpdf_object_walker.h",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b56cdfe_047ecc14",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c143375_3789ef34",
        "filename": "core/fpdfapi/parser/cpdf_object_walker_unittest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "nit: 2017",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e32993b1_e9961393",
        "filename": "core/fpdfapi/parser/cpdf_object_walker_unittest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c143375_3789ef34",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f326ba6f_06323973",
        "filename": "core/fpdfapi/parser/cpdf_object_walker_unittest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-10T20:04:36Z",
      "side": 1,
      "message": "Can we add IsNull() here so we don\u0027t get Unknown?",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0830c05d_0d33dfc5",
        "filename": "core/fpdfapi/parser/cpdf_object_walker_unittest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-10T20:41:10Z",
      "side": 1,
      "message": "We have not CPDF_Object::IsNull method",
      "revId": "35179151860c08f95e834076aa661c693831582b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}