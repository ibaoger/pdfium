{
  "comments": [
    {
      "key": {
        "uuid": "c9e8165c_d381479a",
        "filename": "public/PRESUBMIT.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "Do we expect this to be significantly different than CheckChangeOnUpload in the long run?",
      "range": {
        "startLine": 30,
        "startChar": 47,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2009f971_c1a7dc23",
        "filename": "public/PRESUBMIT.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "No idea. We can add a _DoCommonChecks() function later if it makes sense.",
      "parentUuid": "c9e8165c_d381479a",
      "range": {
        "startLine": 30,
        "startChar": 47,
        "endLine": 30,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b0b8851_891a85bd",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "Document what the script does in a docstring.",
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "856d32c9_0ecce621",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b0b8851_891a85bd",
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00366f21_5132bb14",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "Prepend the names of private functions (all but main) with \u0027_\u0027.",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "139c3b44_b478eab6",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00366f21_5132bb14",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a80c5b4_28a49442",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "This may break with function pointers, but I suppose that\u0027s fine as we\u0027d typedef it anyway, if it was ever included in the api.",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0838444_742d7d00",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Let\u0027s worry about it when it happens.",
      "parentUuid": "6a80c5b4_28a49442",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdbb31cc_d0e61817",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "I can\u0027t tell if this will work for any combination of valid line breaks. You could unwrap the lines before analyzing to make the parsing more simple.",
      "range": {
        "startLine": 28,
        "startChar": 44,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7bf3154_083f7e7f",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "It works as is, given C++ style rules and function naming conventions. Do you think this is good enough for now or would you prefer I try to combine all lines from \"FPDF_EXPORT\" all the way until we find a semi-colon?",
      "parentUuid": "fdbb31cc_d0e61817",
      "range": {
        "startLine": 28,
        "startChar": 44,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd3f95b2_fa346004",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-19T16:36:14Z",
      "side": 1,
      "message": "It\u0027s ok but... would it work if the function name was in the third line? What about if FPDF_CALLCONV was in the second?",
      "parentUuid": "e7bf3154_083f7e7f",
      "range": {
        "startLine": 28,
        "startChar": 44,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a640a27d_eb970319",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-19T18:33:07Z",
      "side": 1,
      "message": "Not sure how the function name can be on the third line unless FPDF_CALLCONV is on the second. For FPDF_CALLCONV to be on the second line, \"FPDF_EXPORT return_type FPDF_CALLCONV\" has to have a return_type of 54 letters.",
      "parentUuid": "bd3f95b2_fa346004",
      "range": {
        "startLine": 28,
        "startChar": 44,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c27c7a_3c7a21ba",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "with open(os.path.join(dirname, filename)) as f:\n  contents \u003d f.readlines()",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 51
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d867ff_f29a8086",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4c27c7a_3c7a21ba",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 51
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a319cd6_8be5eb01",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "Since this is a state machine, let\u0027s use an \"enum\" to keep track of the state or this may devolve into a complex state spread among multiple vars.\n\nLOOK_FOR_EXPORT \u003d 0\nLOOK_FOR_FUNCTION_NAME \u003d 1\n\nstate \u003d LOOK_FOR_EXPORT\n\nand then inside the for, use a \"switch\":\n\nfor line in contents:\n  if state \u003d\u003d LOOK_FOR_EXPORT:\n    if not line.startswith(\u0027FPDF_EXPORT \u0027):\n      continue\n    [...]\n  elif state \u003d\u003d LOOK_FOR_FUNCTION_NAME:\n    state \u003d LOOK_FOR_EXPORT\n    [...]",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a613daae_24eb8fc9",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "I don\u0027t expect this to get more complicated. If the header gets more complicated, this parsing strategy falls apart.",
      "parentUuid": "9a319cd6_8be5eb01",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c42d47f2_4ecb26d2",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-19T16:36:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a613daae_24eb8fc9",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59a669c3_9f16a177",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "Just a suggestion:\n\nfrom collections import Counter\n\nfunctions \u003d Counter()\n[...]\n    functions +\u003d GetExportsFromHeader(public_path, filename)\n\nthen return the Counter and FindDuplicates will be:\nreturn [f for f, occurrences in functions if occurrences \u003e 1]",
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f168714a_0b32f3b6",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "I saw some answers like this on StackOverflow, but I decided this is fast enough that I can make due without collections.",
      "parentUuid": "59a669c3_9f16a177",
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad376fe8_58c6a1ab",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "with open(api_test_path) as f:\n  contents \u003d f.readlines()",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 44
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05950d75_41c0442f",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad376fe8_58c6a1ab",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 44
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6666b86f_23167ad1",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-12-18T21:17:31Z",
      "side": 1,
      "message": "CheckAndPrintFailures (plural)",
      "range": {
        "startLine": 78,
        "startChar": 4,
        "endLine": 78,
        "endChar": 24
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2889d772_838f892f",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-18T22:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6666b86f_23167ad1",
      "range": {
        "startLine": 78,
        "startChar": 4,
        "endLine": 78,
        "endChar": 24
      },
      "revId": "c3b542e5d01fd85893eef2a08561f42525994143",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}