{
  "pushCert": "certificate version 0.1\npusher 5A66FD7B 1509647102 -0700\nnonce AMT3iFiNxAPKcAwv0htl1pwKXdXK1iq/I3wSyw/6YWig8w5mQU878SimDF88NreCnprmvVv6M6XY\n\n0000000000000000000000000000000000000000 fce46d346ac24f58fe9cb3107213f205bc182fbe refs/for/refs/heads/master%wip,m\u003dInitial_upload\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJZ+2L+AAoJEKs2LWFaZv17UXkIALGUMuqIBq1fdcxFO8A2RTfT\nl60GBH4VxaPpI6wZ8DBfL2qdYr7JFzqw31bIvFyinPfGKzNY10D+5SaLFndhV0KE\nPZpAYIviC52V3cP+Ddtj55yZy5QtvWDbPY65TyW4buk8suG2jJGmjwZvfnDJRwth\ny3YqUtM56yIPWTI5//H/pMFW5LeqXkeZDUNuekBPkySmT2jhIZ+gje6IIufOR5bw\nomFkLA86Ewfbv3Xx6pN50MZcClx4ROQrfck1zuoVDRWm4Ewy+dP3r0WRlGr9HVYt\nwIFmckkrvqaKpE9MrrnbVxndM3Oa18GGODg3m3Lbc36AxZjC4nAq376FaehZ6H8\u003d\n\u003dACa2\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "d6de0259_af901d64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-11-02T18:40:46Z",
      "side": 1,
      "message": "This CL seems to do a lot more then just this?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 23
      },
      "revId": "fce46d346ac24f58fe9cb3107213f205bc182fbe",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b71295a_865cd3ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-11-02T18:44:19Z",
      "side": 1,
      "message": "I can certainly break it apart into CLs that do less. As is, rearranging the CMap data in question should make it a bit more obvious that it is range data and not single map entries.",
      "parentUuid": "d6de0259_af901d64",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 23
      },
      "revId": "fce46d346ac24f58fe9cb3107213f205bc182fbe",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7453af55_e3e459b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-11-02T19:20:57Z",
      "side": 1,
      "message": "Maybe do the cleanup Cl first and then a follow-on to fix the bug?",
      "parentUuid": "8b71295a_865cd3ee",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 23
      },
      "revId": "fce46d346ac24f58fe9cb3107213f205bc182fbe",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16c15ea2_bd01eeb0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-11-02T19:36:48Z",
      "side": 1,
      "message": "Most of the cleanup depends on agreeing that the GBK2K-H CMap is a range. Once that happens, then all the DWORD maps are either ranges or none. Only then can we change struct FXCMAP_CMap and make the other changes accordingly. So it has to be fix, then cleanup. I\u0027ve already done a bunch of possible cleanup in https://pdfium-review.googlesource.com/c/pdfium/+/17410 . After this CL lands, whether as 1 or multiple, the other follow ups are:\n\n- Drop FXCMAP_CMap::MapType. Since WORD maps are always single or range, so those two cases can be replaced by a bool. DWORD maps are always range or none, so assume range always, with a nullptr DWORD pointer to represent none.\n- Pack FXCMAP_CMap more efficiently to save ~1 KB.\n- Stop using bsearch().",
      "parentUuid": "7453af55_e3e459b4",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 23
      },
      "revId": "fce46d346ac24f58fe9cb3107213f205bc182fbe",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}