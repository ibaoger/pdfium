{
  "comments": [
    {
      "key": {
        "uuid": "3bdcb899_04189522",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-08-01T01:45:59Z",
      "side": 1,
      "message": "typo: locally",
      "range": {
        "startLine": 9,
        "startChar": 34,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "cda4e94a34d4ccbff9006a38e13f42ca9caee701",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d4bdf42_060b0b49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-01T12:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bdcb899_04189522",
      "range": {
        "startLine": 9,
        "startChar": 34,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "cda4e94a34d4ccbff9006a38e13f42ca9caee701",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9440ce6_ba5fd01c",
        "filename": "core/fpdfapi/parser/cpdf_read_validator.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-08-01T01:45:59Z",
      "side": 1,
      "message": "This class is intended to only be used for saving/restoring the 2 booleans, right?\n\nAn alternative is to make this class private to CPDF_ReadValidator, and to just provide public CPDF_ReadValidator::Save() and CPDF_ReadValidator::Restore() methods. What do you think of this alternative?",
      "revId": "cda4e94a34d4ccbff9006a38e13f42ca9caee701",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "543c6d39_fd3ffa4d",
        "filename": "core/fpdfapi/parser/cpdf_read_validator.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-01T12:15:41Z",
      "side": 1,
      "message": "\u003e\u003e This class is intended to only be used for saving/restoring the 2 booleans, right?\n\nYes, but it is used for saving it in scope.\n\n\u003e\u003e An alternative is to make this class private to CPDF_ReadValidator, and to just provide public CPDF_ReadValidator::Save() and CPDF_ReadValidator::Restore() methods. What do you think of this alternative?\n\nThis is not equal alternative.\n\nThe main idea is - check read problems in current and coverage by it scopes.\n\nFor example:\n\nbool ReadBar() {\n  // Read without session.\n  // In this case we not check read problems, and result may be incorrect, if we have its.\n return DoSomethingOther();\n}\n\nbool ReadFoo(){\n  Session sub_session(validator());\n  // Now read problems are temporary stored in sub_session;\n  bool result \u003d DoSomething();\n  // Now validator() contains problems only for this and coverage by it scopes.\n  if(validator()-\u003ehas_read_problems())\n    return false; // If we have read problems, we can not be sure, that result is correct.\n  return result;\n}\n\nvoid ReadFooBar{\n  Session root_session(validator());\n  // And now we can simple check read problems within all enclosed scopes, and ignore not related for this scope problems of reading.\n  return ReadFoo() \u0026\u0026 ReadBar() \u0026\u0026 !validator()-\u003ehas_read_problems();\n}",
      "parentUuid": "d9440ce6_ba5fd01c",
      "revId": "cda4e94a34d4ccbff9006a38e13f42ca9caee701",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}