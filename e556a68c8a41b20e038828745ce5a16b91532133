{
  "comments": [
    {
      "key": {
        "uuid": "524e6c70_9bfa2c9f",
        "filename": "core/fpdfapi/font/cpdf_cmapparser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "nit: just return 0, then put the declaration of num after this line.",
      "range": {
        "startLine": 142,
        "startChar": 15,
        "endLine": 142,
        "endChar": 25
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b62cd09c_b563a3c2",
        "filename": "core/fpdfdoc/cpdf_variabletext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "nit: maybe ++i, also below.",
      "range": {
        "startLine": 434,
        "startChar": 12,
        "endLine": 434,
        "endChar": 19
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15d38b5b_bbeba3fd",
        "filename": "core/fpdftext/cpdf_textpage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 948,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "Uninitialized use possible at 952, I think.",
      "range": {
        "startLine": 948,
        "startChar": 12,
        "endLine": 948,
        "endChar": 17
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f9094ba_d5e6441d",
        "filename": "core/fpdftext/cpdf_textpage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 949,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "I think we\u0027d want to put the whole mess inside a \n\n  if (!wstrItem.IsEmpty()) {\n\nblock ...",
      "range": {
        "startLine": 949,
        "startChar": 36,
        "endLine": 949,
        "endChar": 63
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84430f0c_2b2e8124",
        "filename": "core/fpdftext/cpdf_textpage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 950,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "nit: {}",
      "range": {
        "startLine": 950,
        "startChar": 24,
        "endLine": 950,
        "endChar": 0
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09e0ed98_20670bf0",
        "filename": "core/fpdftext/cpdf_textpage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1225,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "what happens if nCount \u003d\u003d 0",
      "range": {
        "startLine": 1225,
        "startChar": 13,
        "endLine": 1225,
        "endChar": 19
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd5c6f35_3e61e056",
        "filename": "core/fpdftext/cpdf_textpage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1228,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "nit: super nit: can we flip the order of the two nIndex tests so that \u003e 0 comes first.  Not sure why, but it makes more sense to me to test min then test max.",
      "range": {
        "startLine": 1228,
        "startChar": 26,
        "endLine": 1228,
        "endChar": 61
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4361157a_69be2d8f",
        "filename": "core/fxcrt/cfx_bytestring.h",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:56:20Z",
      "side": 1,
      "message": "Alternatively, here\u0027s another half-baked idea to ponder:  It doesn\u0027t make a lot of sense to have both of these if they both do the same thing.\n\nSo maybe keep (and prefer to use where possible) the []-operator behaviour as as ASSERT with no other checks, but rename GetAt() to SafeGetAt() and have it do both the null data ptr check, and the bounds check, and return 0 for the invalid cases.",
      "range": {
        "startLine": 110,
        "startChar": 2,
        "endLine": 110,
        "endChar": 40
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317fb81a_8308027d",
        "filename": "xfa/fxfa/fm2js/cxfa_fmexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-11T17:30:19Z",
      "side": 1,
      "message": "nit: vastly prefer [] form.",
      "range": {
        "startLine": 63,
        "startChar": 37,
        "endLine": 63,
        "endChar": 46
      },
      "revId": "e556a68c8a41b20e038828745ce5a16b91532133",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}