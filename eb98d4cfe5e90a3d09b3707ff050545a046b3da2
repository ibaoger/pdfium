{
  "comments": [
    {
      "key": {
        "uuid": "826ed3a6_79da4273",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T12:43:08Z",
      "side": 1,
      "message": "Logic moved from CPDF_DataAvail::CheckCrossRef",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4011d7d2_1d8bc081",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T13:59:52Z",
      "side": 1,
      "message": "Can we extract these one by one and just call in to the Checker from the original code and then once all the checks are in the checker, we can make changes to the original code to make calling simpler.\n\nWill make it a lot easier to review if this is broken apart.",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84022070_358636f4",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T14:25:16Z",
      "side": 1,
      "message": "I think this is not make sense, because:\n\nThis is not just moving. This is refactoring.\n1) Currently in original code the checking of cross refs v5 are never called. \n2) Some logic is changed. (For example all checking of crossref v4 items are moved into related method from checking header of crossrefv4) \n3) Used other mechanism to request not loaded yet data. (It this CL we request the data which want to read, instead of calculated block size in original code (which is incorrect some times))\nSee CPDF_CrossRefAvailChecker::ReadBlock\nand CPDF_CrossRefAvailChecker::ScheduleDownload\n4) Moving this logic back, is drop ability to write tests.\n5) In original code this logic is broken much time ago. (Async loading of non linearized docs).\n\nReally, i\u0027m trying to do small CL\u0027s as I can. This CL is logicaly finished. In other case the changes will be imlicit.",
      "parentUuid": "4011d7d2_1d8bc081",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc3eba36_9ba6664d",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T14:44:28Z",
      "side": 1,
      "message": "The problem is that there are moves and refactors in the same CL. Having both makes the code really hard to follow and figure out what\u0027s changed. If we can move things in one CL and then refactor in a second or more CL then we can easily see what changed.\n\n1-- We can move the check code and then hookup afterwards\n2-- This can happen after the moves are done\n3-- This seems like it could be fixed after the moves and refactors, can you file a bug about it?\n4-- We can save the test file you have and commit it as the last step of the moves/refactors\n5-- We should file a bug about the async loading and then fix it once the refactoring is done.\n\nWhen we\u0027ve mixed bug fixes with refactorings, if anything needs to be reverted we end up reverting everything which is a really big hammer. Having more granular changes makes it easier for us to just revert what\u0027s broken.",
      "parentUuid": "84022070_358636f4",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062014d5_b4c1ddce",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T12:43:08Z",
      "side": 1,
      "message": "Logic moved from CPDF_DataAvail::CheckCrossRefItem",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d072f62_0d1cb9ce",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T12:43:08Z",
      "side": 1,
      "message": "Logic moved  from CPDF_DataAvail::CheckTrailer",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b61fcd_dc691884",
        "filename": "core/fpdfapi/parser/cpdf_cross_ref_avail_checker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T12:43:08Z",
      "side": 1,
      "message": "Logic moved  from CPDF_DataAvail::CheckCrossRefStream",
      "revId": "eb98d4cfe5e90a3d09b3707ff050545a046b3da2",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}