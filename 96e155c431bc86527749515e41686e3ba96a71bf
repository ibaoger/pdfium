{
  "comments": [
    {
      "key": {
        "uuid": "aae10c7e_264da11a",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "Have we checked all the callers that none allow this to be a kInvalidObjNum? Now they won\u0027t be able to get the object back out.",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6b1acd_fd34cc02",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "I have prohibited all callers to add objects with kInvalidObjNum.\nSee \nCPDF_IndirectObjectHolder::GetOrParseIndirectObject\nand \nCPDF_IndirectObjectHolder::AddIndirectObject\n\nIf we try to add object with kInvalidObjNum, that it is invalid object, and addition should fail.",
      "parentUuid": "aae10c7e_264da11a",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f124e9_1ff7cb63",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T19:17:24Z",
      "side": 1,
      "message": "If we can\u0027t add them, why do we need the Filter as they should never be in the set?",
      "parentUuid": "cc6b1acd_fd34cc02",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d77c9f0_e6e2c2a6",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-01T13:04:48Z",
      "side": 1,
      "message": "The object can change its owned objNum on destroy:\nSee https://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_array.cpp?rcl\u003d980a3ea30872cef9ada360aa85e7c3573d7668b5\u0026l\u003d27\n\nI don\u0027t see cases yet, when it will affect on CPDF_IndirectObjectHolder, but for consistency with original code i store logic, related to kInvalidObjNum.",
      "parentUuid": "27f124e9_1ff7cb63",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed08ec43_166aeac4",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-09-05T14:20:01Z",
      "side": 1,
      "message": "Why not fix destroy to remove itself from the object holder before the objNum gets changed. We make it an invariant of the object holder that you have a valid object number.",
      "parentUuid": "4d77c9f0_e6e2c2a6",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1a04736_4a88d408",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-05T15:14:05Z",
      "side": 1,
      "message": "The CPDF_Object not know about holder, which contains it. \nI think this is task for other CL. Currently i just store original logic for that cases.",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a340f9a7_4f45b516",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "How does this happen?",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b0bada_8b9038d9",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "For example see https://pdfium-review.googlesource.com/c/pdfium/+/12610/2\n\nAlso this can be happened in some other cases:\nIn decryption logic:\nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_dictionary.cpp?rcl\u003d980a3ea30872cef9ada360aa85e7c3573d7668b5\u0026l\u003d171\nWhile we are checking Signature Dictionary:\nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_syntax_parser.cpp?rcl\u003d980a3ea30872cef9ada360aa85e7c3573d7668b5\u0026l\u003d496\n\nThe \"Length\" field for stream and \"Type\" field for dictionary may be reference to same object. (this case is checked for stream, but not checked for signature dictionary)\nOr its may be reference to object, whom also contains reference to original object. (this case is not checked anywhere). And the parsing will implicitly and recursively started again in CPDF_Reference::GetDirect\n(see https://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_reference.cpp?rcl\u003d980a3ea30872cef9ada360aa85e7c3573d7668b5\u0026l\u003d82)\n\n\nIn CL I have fixed this.",
      "parentUuid": "a340f9a7_4f45b516",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "717bcae0_d067bcc0",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T19:17:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "57b0bada_8b9038d9",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f16e2d75_7b9f1b1b",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "I think this was clearer the original way instead of using the auto\u0026",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b82f3f3_ec8dab49",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "but in original code we have search in map again and again. And this is map of all objects in the document. And it is big.\n\nNow we search just once in all cases",
      "parentUuid": "f16e2d75_7b9f1b1b",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8416fdf_2cf958c3",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-09-05T14:20:01Z",
      "side": 1,
      "message": "Do we have perf tests that degrade in this case? Do we know it\u0027s substantially slower?",
      "parentUuid": "8b82f3f3_ec8dab49",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efe09402_90695c45",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-05T15:14:05Z",
      "side": 1,
      "message": "This is trivial case.\nThe complexity of std::map\u003c\u003e[] is logarithmic in size.\nThe kMaxObjectNumber is 1048576, see \nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_parser.h?rcl\u003d47a90b894ecca2d3547226169602d7f8729d564f\u0026l\u003d52\nAnd in worth case each call will have 20 comparisons for each method call. \n\nIn original code it is called more that ones.\nIn my code just once.\n\nI will create perf test for this, if it is will be necessary.",
      "parentUuid": "f8416fdf_2cf958c3",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de1dcd1_922d376c",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "ditto",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e5e2db7_cb3e40d5",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "7de1dcd1_922d376c",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d893282d_d363a491",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "Can this happen in practice?",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546fd258_a61ee0de",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "Yes, see https://pdfium-review.googlesource.com/c/pdfium/+/12610/2",
      "parentUuid": "d893282d_d363a491",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "267dde0b_162c8ede",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-08-31T16:10:12Z",
      "side": 1,
      "message": "Can we add some tests here for the other methods and things like Filtering invalid obj nums?",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79d0803e_2e64f75b",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-31T16:27:31Z",
      "side": 1,
      "message": "I will soon do this.",
      "parentUuid": "267dde0b_162c8ede",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1245f1_eaf7af5c",
        "filename": "core/fpdfapi/parser/cpdf_indirect_object_holder_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-01T13:04:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79d0803e_2e64f75b",
      "revId": "96e155c431bc86527749515e41686e3ba96a71bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}