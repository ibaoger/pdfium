{
  "comments": [
    {
      "key": {
        "uuid": "910821b7_64881e63",
        "filename": "fxjs/CJX_Define.h",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "Can we remove the capital letters from this file, and include it in BUILD.gn?",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa4b9b9b_2d03a184",
        "filename": "fxjs/CJX_Define.h",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T00:50:08Z",
      "side": 1,
      "message": "I\u0027ll add it to build.gn. I\u0027ll do a followup to rename this and JS_Define at the same time. It was named to match that file.",
      "parentUuid": "910821b7_64881e63",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "009966b4_9e6040af",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "Would it be better for HasMethodFromSpecs() and RunMethodFromSpecs() to take a size_t for the array size, and drop the sentinel value from all the MethodSpecs?",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5945c3f_957bdb41",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T00:50:08Z",
      "side": 1,
      "message": "Maybe? I\u0027m going to leave this way until after i figure out the HasMethod issue.",
      "parentUuid": "009966b4_9e6040af",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c795423_b1f5eab1",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T21:43:23Z",
      "side": 1,
      "message": "So how about with the latest patch set?",
      "parentUuid": "c5945c3f_957bdb41",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a30bb5e3_02002980",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T21:53:28Z",
      "side": 1,
      "message": "Doing it with the nullptr matches the non-XFA JS code (more-so with the latest CL as they both call DefineMethods) so I\u0027d prefer to keep it this way and change both later if we decide we want a count instead of a sentinel.",
      "parentUuid": "4c795423_b1f5eab1",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c047832_efe56674",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T22:11:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a30bb5e3_02002980",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed023780_8424aaea",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "This look identical to CJX_LayoutPseudoModel::HasMethod() and other HasMethod() impls. Any way we can combine them?",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88242346_fdea40b8",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T00:50:08Z",
      "side": 1,
      "message": "They are very similar, except for the call to the base class on line 28. That changes depending on the parent. Same with RunMethod below.\n\nOne thing I could try is passing the MethdSpecs into the constructors in the in CJX_Object storing a vector\u003cconst MethodSpec*\u003e objects that I reverse iterate over in CJX_Object::HasMethod and ::RunMethod, then these overrides can be removed.",
      "parentUuid": "ed023780_8424aaea",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e715df96_609a21d0",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T02:34:18Z",
      "side": 1,
      "message": "Ah, I see CJX_Node::RunMethod() calls CJX_Tree::RunMethod() instead of CJX_Object::HasMethod(). There are too many changes in this CL, so it\u0027s hard to find all the differences.\n\nMaybe you could also design the class hierarchy in a way such that all the ones that call CJX_Object::HasMethod() share an abstract parent class that just implements HasMethod() / RunMethod() ?",
      "parentUuid": "88242346_fdea40b8",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d500fc8a_b450a2e0",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T03:08:24Z",
      "side": 1,
      "message": "That\u0027s what I\u0027m suggesting above, the trick is, each level of parent can have methods that we have to be able to call up to which is why we need a list of MethodSpecs that we can collect in to CJX_Object. CJX_Object is the ultimate parent of all of the CJX_* classes.\n\nIf we have a vector of {CJX_Object::MethodSpecs, CJX_Tree::MethodSpecs, CJX_DataWindow::MethodSpecs} I can walk that list in reverse in CJX_Object to find the method. Or we push all of those methods into a map, since there should be no duplicate names in a given hierarchy but building the map is more work, but would give faster lookup.",
      "parentUuid": "e715df96_609a21d0",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7239d2d8_1561be16",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "Should these keep the first letter capitalized? I see other files with H() -\u003e h() or X() -\u003e x(). What\u0027s better overall?",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5823a780_8867c539",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T00:50:08Z",
      "side": 1,
      "message": "I like the lowercase here because then the method name matches the method name in the spec.",
      "parentUuid": "7239d2d8_1561be16",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cd3bed3_8f63c181",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T02:34:18Z",
      "side": 1,
      "message": "What do you think about having a \"Method_\" prefix? e.g. Method_x().",
      "parentUuid": "5823a780_8867c539",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa268a10_3833b464",
        "filename": "fxjs/cjx_datawindow.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T03:08:24Z",
      "side": 1,
      "message": "Using the lower case names matches what we do in CJS already. I\u0027d prefer to keep this as ::moveCurrentRecord and then, if we decide to change, do both CJX and CJS together.  I\u0027m hoping to get CJX and CJS to look more like each other as time moves on (I\u0027m working on a CL to change the params from void(CFXJSE_Arguments*) to CJS_Return(CJX_V8*, std::vector\u003cv8::...\u003e))",
      "parentUuid": "3cd3bed3_8f63c181",
      "range": {
        "startLine": 37,
        "startChar": 21,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6e8b216_eb9a69ca",
        "filename": "fxjs/cjx_datawindow.h",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "nit: Add a colon after.",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a82d7e04_8939cb8a",
        "filename": "xfa/fxfa/parser/cxfa_node.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-05T22:59:35Z",
      "side": 1,
      "message": "Is this the same all the derived classes? If so, can we just allocate it inside CXFA_Node\u0027s ctor?",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84154a1_bb3d04db",
        "filename": "xfa/fxfa/parser/cxfa_node.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T00:50:08Z",
      "side": 1,
      "message": "No, it can be different per object depends on if it has custom methods and how the parent is defined as in the JS docs.",
      "parentUuid": "a82d7e04_8939cb8a",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53fbe3b_6df12ed5",
        "filename": "xfa/fxfa/parser/cxfa_node.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T02:34:18Z",
      "side": 1,
      "message": "Can we have keep this ctor, but also add a second ctor without this argument that delegates to this one?",
      "parentUuid": "a84154a1_bb3d04db",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ded0eb7_8dd3f4c6",
        "filename": "xfa/fxfa/parser/cxfa_node.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-12-06T03:08:24Z",
      "side": 1,
      "message": "Sure, is that to just minimize the changes to CXFA_*? I should be able to build the smarts into the generation script to skip the param if it\u0027s CJX_Node.",
      "parentUuid": "e53fbe3b_6df12ed5",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6bec3e_36950e3b",
        "filename": "xfa/fxfa/parser/cxfa_node.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-12-06T19:42:43Z",
      "side": 1,
      "message": "Yep. No longer a 400 file CL.",
      "parentUuid": "8ded0eb7_8dd3f4c6",
      "revId": "e66baa96c2cac648a10f56c0e4743892cbce764f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}