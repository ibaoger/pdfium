{
  "comments": [
    {
      "key": {
        "uuid": "a56c10ca_363dc914",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Can GetType be any other value? If not, just drop the switch and inline the code.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "925860b6_787dfa53",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a56c10ca_363dc914",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e217a99_ab99387a",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Can this fix be pulled out to a separate CL with a test?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cae9704_9c945bb2",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "No.\nIt is not reproduced with my changes beacause. Without its, it is loaded as linearized.\n\nAlso we already have test for this\n CPDFSecurityHandlerEmbeddertest.PasswordAfterGenerateSave",
      "parentUuid": "9e217a99_ab99387a",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae820b7_e2b91f09",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T19:47:45Z",
      "side": 1,
      "message": "So, why does your change cause this to break? We lose the Pages dictionary for linearized documents?",
      "parentUuid": "5cae9704_9c945bb2",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f61fc8_adc57e5a",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T20:35:27Z",
      "side": 1,
      "message": "We lose pages dictionary on save linearized document as non linearized, in case when Pages object is not exists in original(linearized) document.",
      "parentUuid": "2ae820b7_e2b91f09",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52d83710_a6d033a3",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "If we didn\u0027t have a Pages object, isn\u0027t the PDF corrupt? How can we render anything without Pages?",
      "parentUuid": "03f61fc8_adc57e5a",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee3ffc24_7ffd40b4",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 315,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "We do not need \"Pages\" object for render first linearized page. For this we use data from LinearizedDictionary",
      "parentUuid": "52d83710_a6d033a3",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af6ac49_c25b06d9",
        "filename": "core/fpdfapi/edit/cpdf_creator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "By chance, the file \"encrypted.pdf\" was have identical save after resave. And it can be loaded like linearized (wich should not be, because pdfium can not save in this format).\nAnd as you see on this file (in pdfium resource folder) in simple text editor, you can see, that it have not Pages object in it root (It is have reference to it (objnum\u003d\u003d16), but this object is not exists).\nTo fix this, I have added ref for single page within Root object.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34973f94_c0262f42",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Decryption was moved from cpdf_syntax_parser.cpp",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74394a9b_e888de8f",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "This seems more like it should just receive an encrypted stream and return the decrypted string contents and not know about signature dictionaries and other things?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4337ccea_888ea045",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "It is should. This is encryption/decryption logic of PDF.",
      "parentUuid": "74394a9b_e888de8f",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18abe5ee_4355eacc",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T19:47:45Z",
      "side": 1,
      "message": "Right, but it\u0027s receiving the entire object at this point? And walking down the tree why not just pass in the specific stream we need instead of doing a tree walk?",
      "parentUuid": "4337ccea_888ea045",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07349445_6d8725fc",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T20:35:27Z",
      "side": 1,
      "message": "What specific stream?\nWe should Decrypt all strings and streams. And for this we should walk into all objects, in any case.\nI think, that good place for this.",
      "parentUuid": "18abe5ee_4355eacc",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49a0a9fe_4dd5d6ab",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "So, why aren\u0027t we decrypting each object as we decode it? I just don\u0027t understand why we do all the decryption as one big pass at the end where we have to walk every object, many of which may not be encrypted in order to decrypt some of them.\n\nWhy can\u0027t we do the decryption as we parse and just decrypt the data for a given object?",
      "parentUuid": "07349445_6d8725fc",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a810f268_e52518ea",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 320,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "I think, that not need to do throw everything in one heap.\n\nThe origin parser code is very implicit to read (and as result to update).\nI want to move code, non related to parsing, into seperate places.\n\nAbout perfomance:\nWe walk after parsing raw data, this is not increase complexity.\nThis just added walking on the pointers of just parsed structures.\n\nAlso in CL de(en)cription code is explicit.\nFor example, very hard to understand, what happened with Signature Dictionaries in original code. But in CL it is simple,",
      "parentUuid": "49a0a9fe_4dd5d6ab",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7700842_96b41d40",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 360,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Why wasn\u0027t this needed previously?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aed87cb_934fa210",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 360,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "This was. \nFor decrypt: \nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_syntax_parser.cpp?rcl\u003d6b0158fdc229e7fc45fdb61c700b709bd82b2309\u0026l\u003d470\nFor encrypt: \nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/edit/cpdf_creator.cpp?rcl\u003d6b0158fdc229e7fc45fdb61c700b709bd82b2309\u0026l\u003d289\n\nBut in this implementation we do not have additional parsing and decryption.",
      "parentUuid": "c7700842_96b41d40",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79193fb9_e3321387",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "I\u0027m not a huge fan of this modifying the object itself, it should just return then encrypted stream and the method be const.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65498b36_f4d3da1f",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "This is private method.\nFor this we have public EncryptObjectClone.",
      "parentUuid": "79193fb9_e3321387",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d796d3c_07c0ab9e",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T19:47:45Z",
      "side": 1,
      "message": "This should just get folded into Clone, but why does Clone need to Clone, if we just receive the data to encrypt instead of changing the object?",
      "parentUuid": "65498b36_f4d3da1f",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "087df9a6_dfdb0aca",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T20:35:27Z",
      "side": 1,
      "message": "We receive object for save. Not specific data. Some object, for wich we can just say Save, and thats all. No more additional external logic. Jusj 40 simple lines for walk, instead of 190 lines of difficult, recursive, implicit code.",
      "parentUuid": "0d796d3c_07c0ab9e",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "806c11a8_f067ed68",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "Right, but this also modifies the object or forces us to clone the object? Can\u0027t we modify walk to do the walking without Clone? Like, walk writes stuff out and then only calls encrypt on specific pieces of data which we immediately write out. No reason to modify the objects as we walk.",
      "parentUuid": "087df9a6_dfdb0aca",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9cc6c29_1c153b96",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 386,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "\u003e Right, but this also modifies the object or forces us to clone the object?\nNot force, it is internal method.\nAlso cloned object is encryption buffer. \n\nBut separate serialization/parsing/de(en)cryption is more explicit. Why we should union serialization and encryption (parsing and encryption)?\n\nWhy we needs the couple writing data methods (one per object specified CPDF_Object::WriteTo and CPDF_Creator::WriteDirectObj)?\netc.\n\nSeparately stayed logic can be reused, tested, simple to modify (and review on updates .... )",
      "parentUuid": "806c11a8_f067ed68",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fdec9f0_8d000c74",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 388,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "encryption was moved from cpdf_creator.cpp",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "005ae100_3ecb35ac",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 419,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Sign dictionary check was moved from cpdf_dictionary.cpp",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f229a114_b877029a",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.h",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Is this ever called?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a12a70db_93aeacef",
        "filename": "core/fpdfapi/parser/cpdf_crypto_handler.h",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "f229a114_b877029a",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc80a16a_33563847",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1279,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Parsing was merged into cpdf_syntax_parser",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35402bc7_5f02a3e6",
        "filename": "core/fpdfapi/parser/cpdf_stream.cpp",
        "patchSetId": 12
      },
      "lineNbr": 102,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "I dont now, way filters and decode params are removed on data change.\nThis is Implicitly. But for now i have created new ReplaceData method.\nThis needs to replace encrypted data by decrypted.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "342981b9_1cc306ba",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 375,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "New splitted implementation.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9cc6d14_948111a3",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 488,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Full object parsing.\nIn plans change GetObject on this method in much of places. But not now, because it is increasing the CL size (which is not tiny now).",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abe7c503_0bf6796c",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 531,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Assign refs to CPDF_Document, to direct access to object from CPDF_References",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eca69575_e2d33d82",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 534,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Why does this need to be done post-process? Why can\u0027t we do it when we create the ref?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c56b827_04e3d604",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 534,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "1) If we do this, we can got infinite recursion.\n2) In future i want to use it to change the CPDF_IndirectObjectHolder. (When object is loaded within cpdf_data_avail and then will be moved into cpdf_parser/cpdf_document).\n3) This is more comfort reads, and ьore understandable, what happened between with CPDF_IndirectObjectHolder and object.\n4) CPDF_IndirectObjectHolder is not related to raw syntax of pdf, it is related to document logic. In future i want to move it into cpdf_document (which it is should be).",
      "parentUuid": "eca69575_e2d33d82",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3237d71_94f35453",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 534,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "Why does it lead to infinite recursion? Having a series of post-process steps that walk over everything seems like it could lead to performance regressions.\n\nHow are we doing this now, as it doesn\u0027t seem to be doing infinite recursion?",
      "parentUuid": "8c56b827_04e3d604",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8aa150f_8206a493",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 542,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "StringPool assignment to reduce memory usage.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe0af796_a203f9b2",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 546,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "This seems to be a post-processing step to replace strings with pooled versions? Can\u0027t we just do this during parse to save the walk? This could be very expensive for large documents.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6760a251_625e449c",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 546,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "We should do this only after decryption. But in much of places in CPDF_DataAvail for example we parse object without decryption, but with pool, than parse again by with decryption and with pool too, as result in pool we have two same strings, but one is encrypted. \nAlso this implementation is more understandable.",
      "parentUuid": "fe0af796_a203f9b2",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6d5b241_dfc18ded",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 546,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "In which case, I think we should make the decryption code use the string pool. Then we don\u0027t have to walk over every object, we just assign to the pool as we decrypt.",
      "parentUuid": "6760a251_625e449c",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae0367a_fc49d5b0",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 546,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "What wrong with additional walking after object parse?\nIt is fast and not increase complexity.\nAnd why we should union different types of tasks (parsing / de(en)cryption / strings pooling ... )?",
      "parentUuid": "d6d5b241_dfc18ded",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49b4306e_e1cb4722",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Just removed decryption logic.",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2039688_eaf9cce4",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "So the stream is always decoded at this point?",
      "parentUuid": "49b4306e_e1cb4722",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78c11a67_0c44ed80",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "No. It is always encrypted. but keywords of stream end \"endstream\" \"endobj\" are never encrypted",
      "parentUuid": "e2039688_eaf9cce4",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f507c7_c383dee1",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "But before we only did this work if we did not have a crypto handler, now we always do it? So, si the crypto handling code doing less work to handle what this was doing?",
      "parentUuid": "78c11a67_0c44ed80",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c5a201e_a0206454",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "Crypto handling code not doing less work.\nIt is just disable additional data validation, not more. this validation is not related to encryption anyway. I have store it always enabled.",
      "parentUuid": "91f507c7_c383dee1",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e26c2f0e_94e0a123",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 728,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Why reset m_Pos?",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8ca3f63_35850acf",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 728,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "We are checked the Length value of stream dictionary. \nAfter that we should move carret to stream start to read it. (or to search real stream end, if \"Length \" is incorrect)",
      "parentUuid": "e26c2f0e_94e0a123",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e9f5c40_39eda459",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 728,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-25T17:48:31Z",
      "side": 1,
      "message": "Why didn\u0027t we need to do that before, did something else change that requires this behaviour now?",
      "parentUuid": "b8ca3f63_35850acf",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a07cb32f_5c5cf1ce",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 12
      },
      "lineNbr": 728,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-25T19:32:18Z",
      "side": 1,
      "message": "hm. I have just removed other bracket.\nI will fix this.",
      "parentUuid": "6e9f5c40_39eda459",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1f84194_e7e7efaa",
        "filename": "fpdfsdk/fpdfsave_embeddertest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T16:21:08Z",
      "side": 1,
      "message": "Because the serialization logic is tiny changed, the saved files size, are changed too. \n(some \"\\r\" are replaced into \"\\r\\n\")",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "befa8428_255b19b0",
        "filename": "fpdfsdk/fpdfsave_embeddertest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-07-24T17:55:01Z",
      "side": 1,
      "message": "Can we split the serialization change out to a new CL.",
      "parentUuid": "a1f84194_e7e7efaa",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80bf34d3_d6a17e24",
        "filename": "fpdfsdk/fpdfsave_embeddertest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-24T18:49:31Z",
      "side": 1,
      "message": "No. As i say. It is related to object parsing, which related to encryption/decryption, which related to serialization, .....",
      "parentUuid": "befa8428_255b19b0",
      "revId": "ff1c51197878fcc7352796b3fef34a9f78dc5ac4",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}