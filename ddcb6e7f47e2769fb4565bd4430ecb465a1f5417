{
  "comments": [
    {
      "key": {
        "uuid": "d74b50ef_b25d06fd",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 505,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-05T18:08:55Z",
      "side": 1,
      "message": "since we short-circuit the rendering to .png etc, we should give an error if --png --show--structure combination (for example) is specified.  One way to do this would to define a new output format of dump, alteratively check the the format is NONE here, and that show_structure is false for all the other output format args ...",
      "range": {
        "startLine": 504,
        "startChar": 6,
        "endLine": 505,
        "endChar": 37
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "616f0b3e_656877e5",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 505,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d74b50ef_b25d06fd",
      "range": {
        "startLine": 504,
        "startChar": 6,
        "endLine": 505,
        "endChar": 37
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2068e39f_ecb5134e",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 632,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-05T18:08:55Z",
      "side": 1,
      "message": "You really ought to bounds check here.\n\nor just\n\nstd::string result;\nresult.reserve(buf_size);\nfor (unsigned long i \u003d 0; i \u003c buf_size; ++i)\n   result.push_back(buf[i]);\n\nor maybe if you want to be really really cool there might be a way to make this work\n\nstd::string result;\nresult.reserve(buf_size);\nstd::copy(buf, buf + buf_size, std::back_inserter(result));",
      "range": {
        "startLine": 629,
        "startChar": 2,
        "endLine": 632,
        "endChar": 31
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2f14f6_7f6f4e07",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 632,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2068e39f_ecb5134e",
      "range": {
        "startLine": 629,
        "startChar": 2,
        "endLine": 632,
        "endChar": 31
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a30e46d5_6a6871fa",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-05T18:08:55Z",
      "side": 1,
      "message": "the usual trick is to just use an integer for indent and increment by one at each level, and print via\n\nprintf(\"%*s%ls\", indent * 2, \"\", ConvertToWString ... );",
      "range": {
        "startLine": 638,
        "startChar": 2,
        "endLine": 638,
        "endChar": 32
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8c675f_720bfb63",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a30e46d5_6a6871fa",
      "range": {
        "startLine": 638,
        "startChar": 2,
        "endLine": 638,
        "endChar": 32
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2626ae7_841bc6e3",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 661,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-05T18:08:55Z",
      "side": 1,
      "message": "do we want this to go to stderr?",
      "range": {
        "startLine": 661,
        "startChar": 4,
        "endLine": 661,
        "endChar": 11
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce56356a_71c643dd",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 661,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2626ae7_841bc6e3",
      "range": {
        "startLine": 661,
        "startChar": 4,
        "endLine": 661,
        "endChar": 11
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4739fd40_de45da45",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 691,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-05T19:31:53Z",
      "side": 1,
      "message": "I missed this return. Why avoid doing the rest if this option is set?",
      "range": {
        "startLine": 691,
        "startChar": 4,
        "endLine": 691,
        "endChar": 12
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0ba4eb0_b1e9165f",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 691,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "Because I don\u0027t want to get the image output if I want to just see the structure.",
      "parentUuid": "4739fd40_de45da45",
      "range": {
        "startLine": 691,
        "startChar": 4,
        "endLine": 691,
        "endChar": 12
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fd4537c_926a4509",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 692,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-05T18:08:55Z",
      "side": 1,
      "message": "do we want to do this after we send events to the page, since the event might mutate the structure?",
      "range": {
        "startLine": 689,
        "startChar": 1,
        "endLine": 692,
        "endChar": 3
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87b59191_4d5f6926",
        "filename": "samples/pdfium_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 692,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-05T19:43:20Z",
      "side": 1,
      "message": "I don\u0027t know if JS can modify this? This isn\u0027t the elements from the page, it\u0027s a parallel hierarchy in the document as far as I can tell.",
      "parentUuid": "8fd4537c_926a4509",
      "range": {
        "startLine": 689,
        "startChar": 1,
        "endLine": 692,
        "endChar": 3
      },
      "revId": "ddcb6e7f47e2769fb4565bd4430ecb465a1f5417",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}