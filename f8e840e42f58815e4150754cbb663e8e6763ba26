{
  "comments": [
    {
      "key": {
        "uuid": "b5ff6c7b_4e67ac9c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-09-05T13:59:15Z",
      "side": 1,
      "message": "Why isnt\u0027 this caught by the check on 1486? Should we request more data to complete the parse instead of treating it as an error?",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "756e26f7_4fe90d03",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-05T14:22:01Z",
      "side": 1,
      "message": "\u003e\u003e Why isnt \u0027this caught by the check on 1486?\n\nThis is case, when we have unavailable data.\n\nExample, the file size is 1000:\nwe have available {[0..100)}\n\nThe offset of the first entry in the main xref table is 900 (m_pLinearized-\u003e GetLastXRefOffset ()).\nIn CPDF_DataAvail we request data main xref table data, from m_pLinearized-\u003e GetLastXRefOffset () to end.\nSee https://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_data_avail.cpp?rcl\u003d47a90b894ecca2d3547226169602d7f8729d564f\u0026l\u003d1223\n\nAfter that, we have available {[0..100), [900..1000)},\n\nBut the CPDF_SyntaxParser for read char at offset \u0027900\u0027, was tried to read last 512 bytes of file [512..1000], but in this case it is unavailable.\nSee\nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_syntax_parser.cpp?rcl\u003d47a90b894ecca2d3547226169602d7f8729d564f\u0026l\u003d70\n\nAs result m_pSyntax-\u003e GetNextChar return \u0027\\ 0\u0027 because we can not read unavailable data at \u0027512\u0027 offset (which was tried CPDF_SyntaxParser), and we are not at file end (which checked on 1486 line)\n\n\u003e\u003e Should we request more data to complete the parse instead of treating it as an error?\n\n We can not do this because it is internal logic of CPDF_SyntaxParser. It is imlicitly tried to read useless data.",
      "parentUuid": "b5ff6c7b_4e67ac9c",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62e74419_94a5415e",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-09-06T20:34:23Z",
      "side": 1,
      "message": "The syntax parser used to have a validator-\u003eReadBlock(m_pFileBuf, 0, std::min(m_BufSize, static_cast\u003cuint32_t\u003e(m_FileLen))); call which I\u0027m guessing can request new data? Wouldn\u0027t we be able to use that to request the blocks we need?",
      "parentUuid": "756e26f7_4fe90d03",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a006bc0_92a1114c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-06T21:23:24Z",
      "side": 1,
      "message": "The data will be automaticaly requested on read fail.\n\nBut currently CPDF_Parser is not know about validator, and can not correctly process this case. I want to fix this bug in original logic before continue refactoring. (To upload FakeFileAcces which is end of this relation chain, And this bug was detected by it.).",
      "parentUuid": "62e74419_94a5415e",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d51cd442_168b01ec",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-09-07T14:10:09Z",
      "side": 1,
      "message": "Right, but we\u0027re asking the syntax parser for the next character, so why isn\u0027t the syntax parser requesting it if it isn\u0027t available?",
      "parentUuid": "1a006bc0_92a1114c",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18ee0c49_08d7a270",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1490,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-09-07T15:10:06Z",
      "side": 1,
      "message": "The CPDF_DataAvail request data from 900 to file end\nAfter data reseived the CPDF_Parser try to read data using CPDF_SyntaxParser from 900 to file end.\nBut the CPDF_SyntaxParser(original) read data from 512(not 900) to file end to read char at 900 offset.",
      "parentUuid": "d51cd442_168b01ec",
      "revId": "f8e840e42f58815e4150754cbb663e8e6763ba26",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}