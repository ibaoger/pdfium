{
  "comments": [
    {
      "key": {
        "uuid": "9104d3fb_4baed04f",
        "filename": "fpdfsdk/fpdfannot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-08T21:33:49Z",
      "side": 1,
      "message": "Can there already exist an object called \"Annots\" that is not an array? In which case, would this overwrite the existing object, or do something else? I wonder if the Add() below is the source of the flakiness?\n\nSame pattern below. e.g. on line 189.",
      "revId": "20eafda108cf9b0ab336fb8ab5d83a011f7b8307",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fae7249_01a568d4",
        "filename": "fpdfsdk/fpdfannot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 6975
      },
      "writtenOn": "2017-06-08T21:49:44Z",
      "side": 1,
      "message": "I doubt there could be another object called \"Annots\". There\u0027s plenty of places in the code where we GetArrayFor(\"Annots\") without any other protection. (Also per the spec...)\nAdd() would overwrite the existing object if there\u0027s still something there. Would this be problematic?",
      "parentUuid": "9104d3fb_4baed04f",
      "revId": "20eafda108cf9b0ab336fb8ab5d83a011f7b8307",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06960451_4ea6375f",
        "filename": "public/fpdf_annot.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-06-08T21:33:49Z",
      "side": 1,
      "message": "Remember to update fpdfsdk/fpdfview_c_api_test.c with new APIs.",
      "revId": "20eafda108cf9b0ab336fb8ab5d83a011f7b8307",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}