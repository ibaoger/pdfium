{
  "comments": [
    {
      "key": {
        "uuid": "5f787600_e5602eff",
        "filename": "core/fxcrt/fx_basic.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-04T19:24:26Z",
      "side": 1,
      "message": "this adds a copy that wasn\u0027t here before, which is likely what we want if the m_Buffer isn\u0027t stable.  Worry about embedded nuls here.",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 71
      },
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47c848ff_e4120d91",
        "filename": "core/fxcrt/fx_basic.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-04T19:39:53Z",
      "side": 1,
      "message": "An alternative to all this would be to stash the std::string result as a member this class, then the copy is avoided, and the result is valid as long as the encoder exists or GetResult is called again.  A comment to that effect wouldn\u0027t hurt either if we go down this path.",
      "parentUuid": "5f787600_e5602eff",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 71
      },
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf62ec8_2367df8b",
        "filename": "core/fxcrt/fx_basic.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-08-09T18:19:52Z",
      "side": 1,
      "message": "Made it a vector, retaining previous behavior (returns pointer to the m_Buffer internal memory).",
      "parentUuid": "47c848ff_e4120d91",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 71
      },
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f07e31_28179e0e",
        "filename": "core/fxcrt/fx_basic.h",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-04T19:43:52Z",
      "side": 1,
      "message": "maybe std::vector\u003cuint8_t\u003e is more appropriate here, we\u0027re not doing any actual formatting when we \"\u003c\u003c\" onto the end of the stream, and its easy to make a ByteStringC() from a vector that will persist as long as the underying class.\n\nand AppendStr() would have to change to a vector insert, but that\u0027s easy.",
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2470eb41_14b8830d",
        "filename": "core/fxcrt/fx_basic.h",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-08-09T18:19:52Z",
      "side": 1,
      "message": "Good call, this does make more sense as a vector. Done.",
      "parentUuid": "87f07e31_28179e0e",
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472f0073_20f672e1",
        "filename": "core/fxcrt/fx_basic_utf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-04T19:22:37Z",
      "side": 1,
      "message": "nit:  maybe make a local to do just one static_cast\u003cuint32_t\u003e while we\u0027re here.",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 4
      },
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff58d895_d72b5377",
        "filename": "core/fxcrt/fx_basic_utf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-08-09T18:19:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "472f0073_20f672e1",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 4
      },
      "revId": "4811d0945dbdc4361cb8fab2e75dd6cc9fc21a6e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}