{
  "comments": [
    {
      "key": {
        "uuid": "b12914aa_f5911c5e",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T18:19:03Z",
      "side": 1,
      "message": "Most places that dereference |m_pDocument| do not check to see if it\u0027s a nullptr or not. Why do we do it here? It feels like we should either do it everywhere, or nowhere. Note the pointer is const and always points to the same document for its lifetime.",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc41232_a75bd507",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 6990
      },
      "writtenOn": "2017-05-31T18:36:43Z",
      "side": 1,
      "message": "I removed it.",
      "parentUuid": "b12914aa_f5911c5e",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbf92f0b_294089be",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 67,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T18:19:03Z",
      "side": 1,
      "message": "empty()",
      "range": {
        "startLine": 67,
        "startChar": 20,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3db77e23_c3a30fcd",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 67,
      "author": {
        "id": 6990
      },
      "writtenOn": "2017-05-31T18:36:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbf92f0b_294089be",
      "range": {
        "startLine": 67,
        "startChar": 20,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "748286d6_4a73161e",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T18:19:03Z",
      "side": 1,
      "message": "If we return here, or due to the next if statement, and |pStream| does not get added to some structure, does it leak?",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7417a4f0_0a1f0978",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 6990
      },
      "writtenOn": "2017-05-31T18:36:43Z",
      "side": 1,
      "message": "No. The pointer that is returned is owned by the document.\nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_indirect_object_holder.h?type\u003dcs\u0026l\u003d34\nShould I clean it up anyway?\n\npDoc-\u003eDeleteIndirectObject(pStream-\u003eGetObjNum());",
      "parentUuid": "748286d6_4a73161e",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ee5825f_e04a56a5",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T19:25:45Z",
      "side": 1,
      "message": "Right, the returned pointer from NewIndirect() is unowned. I couldn\u0027t remember off the top of my head.\n\nYes, we should delete it. At the very least, leaving it there is using up memory.",
      "parentUuid": "7417a4f0_0a1f0978",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd0c9dd_19519234",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 6990
      },
      "writtenOn": "2017-05-31T19:50:28Z",
      "side": 1,
      "message": "I changed it to add the stream as the contents before returning.",
      "parentUuid": "9ee5825f_e04a56a5",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f124123_41fc4200",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T21:21:17Z",
      "side": 1,
      "message": "OK, but we planned on deleting |pStream| before. Would that have resulted in potentially missing data?",
      "parentUuid": "bcd0c9dd_19519234",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb09308_e5d0a208",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 6990
      },
      "writtenOn": "2017-05-31T21:35:57Z",
      "side": 1,
      "message": "Yes, if the contents were a direct object instead of a reference or if the reference pointed to something we were not expecting. Perhaps the PDF from pdfium issue 165? The old contents would still get wiped, but at least the new contents would be there like it would have before this change.",
      "parentUuid": "1f124123_41fc4200",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4335304e_3fbc1388",
        "filename": "core/fpdfapi/edit/cpdf_pagecontentgenerator.cpp",
        "patchSetId": 11
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T22:43:16Z",
      "side": 1,
      "message": "I\u0027m ok with potentially garbage in, potentially garbage out. If we find this to be a problem, we can deal with the issue as it arises.",
      "parentUuid": "ebb09308_e5d0a208",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab5dead_425e160b",
        "filename": "core/fpdfapi/page/cpdf_pageobject.h",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-05-31T18:19:03Z",
      "side": 1,
      "message": "nit: add a blank line to separate methods from member variables. Like line 61 above.",
      "revId": "617a407f5c69bb05cbc60174c920a6557c514242",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}