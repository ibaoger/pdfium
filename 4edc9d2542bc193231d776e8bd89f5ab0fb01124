{
  "comments": [
    {
      "key": {
        "uuid": "7f22ddab_dc795aa2",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:20:54Z",
      "side": 1,
      "message": "I don\u0027t think any of these actually get defined.",
      "range": {
        "startLine": 133,
        "startChar": 4,
        "endLine": 133,
        "endChar": 37
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184d532d_09ac148f",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:03:20Z",
      "side": 1,
      "message": "nit: This qualification should be implied be being in the method,",
      "range": {
        "startLine": 163,
        "startChar": 7,
        "endLine": 163,
        "endChar": 32
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb38df83_cc92e1ff",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 187,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:03:20Z",
      "side": 1,
      "message": "do we really need to do this, or do we just restore the old value?",
      "range": {
        "startLine": 186,
        "startChar": 2,
        "endLine": 187,
        "endChar": 68
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b67822a0_3340f6e0",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:03:20Z",
      "side": 1,
      "message": "what if there isn\u0027t a value?",
      "range": {
        "startLine": 204,
        "startChar": 19,
        "endLine": 204,
        "endChar": 39
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f1bcca4_802992eb",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T20:53:28Z",
      "side": 1,
      "message": "Is this the only way that m_iPostion wouldn\u0027t have a value?",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 313,
        "endChar": 24
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca23a401_07544136",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.cpp",
        "patchSetId": 3
      },
      "lineNbr": 314,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:03:20Z",
      "side": 1,
      "message": "this should prolly signal failure to caller?",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 314,
        "endChar": 11
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2caa7348_a967f60d",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:03:20Z",
      "side": 1,
      "message": "nit: I\u0027d call this |Where| or |FromWhere| as long as we\u0027re mucking with this.",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 16
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51d2b7b8_4a041158",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:08:08Z",
      "side": 1,
      "message": "or just |From| as From::Begin is kinda a cool enum.",
      "parentUuid": "2caa7348_a967f60d",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 16
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29bdf778_4eebf95d",
        "filename": "core/fxcrt/cfx_seekablestreamproxy.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-08-28T21:09:27Z",
      "side": 1,
      "message": "I guess what I\u0027m realizing is that it might be cleaner to always have a position even if readstring and company might return Optionals.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 44
      },
      "revId": "4edc9d2542bc193231d776e8bd89f5ab0fb01124",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}