{
  "comments": [
    {
      "key": {
        "uuid": "4849076f_b986fb22",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 446,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-27T16:23:49Z",
      "side": 1,
      "message": "CPDF_Parser specific logic",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f01428e_69077e13",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 446,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "This looks almost identical to lines 567-577. Can we combine the two into a helper method?",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa02b825_d2a9c925",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 446,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f01428e_69077e13",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a537f76_cf29f8e1",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-27T16:23:49Z",
      "side": 1,
      "message": "I want to move the CPDF_Parser::ParseAndAppendCrossRefSubsectionData and CPDF_Parser::ParseCrossRefV4 into CPDF_SyntaxParser.\nI think, its are related to syntax of PDF.\nCan i do this?\nCan i do this in this CL?",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecfbf7cd_5daf2ff0",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Let\u0027s ask Wei.",
      "parentUuid": "9a537f76_cf29f8e1",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92cba4f1_5b535780",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-07-31T20:13:46Z",
      "side": 1,
      "message": "Handling cross references is mainly done in CPDF_Parser for now. Merging two parsers may belong to a separate task.",
      "parentUuid": "ecfbf7cd_5daf2ff0",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c6cc7e3_5f0ad11f",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-01T12:48:09Z",
      "side": 1,
      "message": "I do not want completely merge the CPDF_Parser and CPDF_SyntaxParser.\nI just want to move methods, more related to CPDF_SyntaxParser into it. \nThis is cross refs parsing methods and some other, not all. At start it is parsing of crossRevV4.\nCan i do that in separate CL (move the CPDF_Parser::ParseAndAppendCrossRefSubsectionData and CPDF_Parser::ParseCrossRefV4 into CPDF_SyntaxParser.)?",
      "parentUuid": "92cba4f1_5b535780",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32e811d_bf6ac8f4",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-08-01T18:51:42Z",
      "side": 1,
      "message": "Currently, CPDF_Parser is doing file structure parsing. Would your proposed changes mean for parsing crossRefTable, two parsers have to be involved?",
      "parentUuid": "2c6cc7e3_5f0ad11f",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fa8e58c_7085c54c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-08-01T19:15:11Z",
      "side": 1,
      "message": "Currently, CPDF_Parser is doing file structure parsing and raw data parsing (cross refs and obj headers).\n\nI want to CPDF_Parser just construct file structure using CPDF_SyntaxParser. (like now, but all syntax related logic will be moved into CPDF_SyntaxParser, and construction related logic will be stored in CPDF_Parser).",
      "parentUuid": "f32e811d_bf6ac8f4",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bd2ab18_781727c8",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Can |start_objnum| be uint32_t? Same for |count|.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd95f328_27d1837f",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bd2ab18_781727c8",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c05bce_a65d09c2",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 462,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "If you can add a comment to say \"A sample entry looks like ...\" that would be really helpful.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97326059_4d90006a",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 462,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45c05bce_a65d09c2",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6edd6fc2_2d6de40e",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 476,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Why don\u0027t we check for ReadBlock() failures anymore?",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8103f3_ce49ad5f",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 476,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "This code was moved from CPDF_Parser::LoadCrossRefV4, not from CPDF_Parser::LoadLinearizedCrossRefV4.\nIn CPDF_Parser::LoadCrossRefV4 it is not checked.\nSee https://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_parser.cpp?rcl\u003d834ebece214f06c6e9fda803ab321e8453b3a54b\u0026l\u003d536\n\nBTW. I have added the check",
      "parentUuid": "6edd6fc2_2d6de40e",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18847ecc_5cb06ea9",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Why don\u0027t we make this a non-const reference? Same for |info| below.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f083a4_deaf5407",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18847ecc_5cb06ea9",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e14457_79935df6",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Do we want to use FXSYS_atoi64() + safe_conversions.h to do this? On Windows, FX_FILESIZE is a int32_t, so if FXSYS_atoi64() returns a large number...",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bda09b8_ba584571",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90e14457_79935df6",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5a4b654_fbb5a7bb",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 516,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Can we just ASSERT(out_objects-\u003eempty()) and give the responsibility to the caller?",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ebf5d79_3c9ae783",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 516,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "I think this will be implicit for caller.",
      "parentUuid": "a5a4b654_fbb5a7bb",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd0181f4_68de4374",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 519,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "style: BTW, when the conditional is 1 line and the body is 1 line, we don\u0027t bother with braces.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6308a762_c0258c89",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 519,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd0181f4_68de4374",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9d0d16c_c3e8242e",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 535,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Can we just ASSERT(start_obj_num_at_last_block) at the top of the method instead, since there\u0027s only 1 caller and it always passes in a valid pointer.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b98c7857_546b0444",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 535,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "I think no.\nIdea is, that we should parse CrossRefV4 if we can, ignoring output params. Will be strange, if we allow nulled out_objects, but not allow nulled start_obj_num_at_last_block.\n\nBTW, start_obj_num_at_last_block is very strange value, wich is used only in CPDF_Parser::LoadLinearizedMainXRefTable (like m_dwXrefStartObjNum) as object count.",
      "parentUuid": "c9d0d16c_c3e8242e",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e34894d_c04f8b2c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Can we make the contract that |out_objects| and |start_obj_num_at_last_block| are only valid if this method returns true? Then we can just return false here and not worry about having to give back good data.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aba3a4a_5d12eb72",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "I want, but in the original code, the start_obj_num_at_last_block (m_dwXrefStartObjNum in original) was applyed, independently from next parsing result.\nSee \nhttps://cs.chromium.org/chromium/src/third_party/pdfium/core/fpdfapi/parser/cpdf_parser.cpp?rcl\u003d834ebece214f06c6e9fda803ab321e8453b3a54b\u0026l\u003d528\n\nI will do this in separate CL, after. To prevent potential reverts of this.",
      "parentUuid": "0e34894d_c04f8b2c",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52e1d71_44109f9b",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-27T16:23:49Z",
      "side": 1,
      "message": "CPDF_Parser specific logic",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65175300_36f3427a",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 5045
      },
      "writtenOn": "2017-07-27T22:23:51Z",
      "side": 1,
      "message": "Can we skip this, and skip checking:\n\nm_pSyntax-\u003eGetKeyword() !\u003d \"xref\"\n\nin ParseCrossRefV4(), which should never fail, with this being the only caller.",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3320b2c0_31f1f816",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 7160
      },
      "writtenOn": "2017-07-28T15:58:07Z",
      "side": 1,
      "message": "in original code the m_SortedOffset.insert(pos); is called in case when all ok with m_pSyntax-\u003eGetKeyword() \u003d\u003d \"xref\", but parsing failed. \n\nI store this logic for now.\nI will do this in separate CL, after. To prevent potential reverts of this.",
      "parentUuid": "65175300_36f3427a",
      "revId": "687fa27a9f222bd847ba5f33fe4960c29ab3d8a1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}