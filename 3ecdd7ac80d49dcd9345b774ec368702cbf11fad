{
  "comments": [
    {
      "key": {
        "uuid": "da3bb667_e56d1390",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-11-27T20:12:39Z",
      "side": 1,
      "message": "I though bot limit was 2G?",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "3ecdd7ac80d49dcd9345b774ec368702cbf11fad",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9a7d9dc_0178e026",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-11-27T20:16:13Z",
      "side": 1,
      "message": "It\u0027s failing on a an allocation of size 805 MB. I also noticed that the size limit in xfa_codec_fuzzer.h was reduced to 1 MB, I think that\u0027s way too low.",
      "parentUuid": "da3bb667_e56d1390",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "3ecdd7ac80d49dcd9345b774ec368702cbf11fad",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14d579b4_d3b27f3c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 7065
      },
      "writtenOn": "2017-11-27T20:17:39Z",
      "side": 1,
      "message": "The bot will kill you at 2GB, so limiting the image size to be significantly lower then that that makes sense, since if the image is 2 gigs, you have no working space.",
      "parentUuid": "da3bb667_e56d1390",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "3ecdd7ac80d49dcd9345b774ec368702cbf11fad",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c18b237c_67fc3252",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-11-27T20:24:48Z",
      "side": 1,
      "message": "We\u0027re already at 1GB, so limiting by half seems like it maked sense. Going to a 10th of that value seems like we\u0027re getting really small?\n\nAre we sure, in this case, that the image is valid? What\u0027s allocating 800mb?",
      "parentUuid": "14d579b4_d3b27f3c",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "3ecdd7ac80d49dcd9345b774ec368702cbf11fad",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12dc6e12_9719e450",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-11-27T20:29:45Z",
      "side": 1,
      "message": "In the fuzzer code itself, we create a bitmap of the size before doing anything else...\n\nI thought it\u0027s crashing right after Create. My fprintfs are just weird: adding at some places make some others disappear. Hence why I thought it was just crashing right after Create. I\u0027m looking to see where the remaining GB is being allocated. But it\u0027s true MSAN uses extra memory to keep track of stuff, just not sure how much.\n\nI still disagree with 1MB as a reasonable limit. What was the reasoning behind it? I don\u0027t think expecting more than 2 orders of magnitude of memory to parse the image is normal, that would just be a bug.",
      "parentUuid": "c18b237c_67fc3252",
      "range": {
        "startLine": 10,
        "startChar": 19,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "3ecdd7ac80d49dcd9345b774ec368702cbf11fad",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}