{
  "comments": [
    {
      "key": {
        "uuid": "93e877db_f1425aca",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "I have a feeling I\u0027ve seen smth like this from machenbach@",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec10586d_24fca96c",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "prefer argparse instead from Py 2.7.",
      "range": {
        "startLine": 12,
        "startChar": 7,
        "endLine": 12,
        "endChar": 15
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8495e9fd_73a67259",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "nit: 2 lines between top-level defs and classes.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 5
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb819d8b_441e95e0",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "class CovLine(object):  \nis preferred way since Py 2.7. See http://google.github.io/styleguide/pyguide.html?showone\u003dClasses#Classes",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 13
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "323e2ded_94a519f3",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "not necessary, [:-1] is the same.",
      "range": {
        "startLine": 39,
        "startChar": 49,
        "endLine": 39,
        "endChar": 50
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d8999a_8c4b674c",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "so you are computing average coverage of functions?\nI somehow always thought it was about % of functional lines covered, but maybe I\u0027m wrong.",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 14
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ada63551_acc431ad",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "Pythonic:\n  percent \u003d sum(f.percent_executed for f in self.functions)\nbut yours is also fine, of course.",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef39d797_e303c8c7",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "this is int, count is also int, so you got integer division. Intended?\nIf not,\n  float(perecent)/count",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 18
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ebaf6b4_ca24a2ea",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "I\u0027d make this a property s.t. calling it would be \"covfile.outname\" instead of \"covfile.outname()\".\n\n@property\ndef outname(self):\n  return ...",
      "range": {
        "startLine": 67,
        "startChar": 2,
        "endLine": 67,
        "endChar": 18
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6a70be1_2a22b644",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "are you sure it\u0027s in $PATH?",
      "range": {
        "startLine": 72,
        "startChar": 35,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a6a38e_7f330151",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "add doc:\n\"\"\"returns xyz\"\"\"",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 21
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "506683d9_509613df",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "i\u0027d add:\nassert file.endswith(\u0027.gcov\u0027)",
      "range": {
        "startLine": 76,
        "startChar": 14,
        "endLine": 76,
        "endChar": 19
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4e928f2_1fbe7c4c",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "redundant",
      "range": {
        "startLine": 77,
        "startChar": 21,
        "endLine": 77,
        "endChar": 22
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f58376b5_6b85e82b",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "this means reading as a binary file, but you are reading line by line like text. Intended?",
      "range": {
        "startLine": 84,
        "startChar": 20,
        "endLine": 84,
        "endChar": 21
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b472486_229666a9",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "Consider:\n  for lineno, line in enumerate(infile):\nwhich will make errors easier to navigate to (see comment for line 99)",
      "range": {
        "startLine": 85,
        "startChar": 8,
        "endLine": 85,
        "endChar": 23
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c192d463_4b7eedbc",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "ok, but easier to read is:\nparts \u003d [part.strip() for part in line.split(\u0027 \u0027))\n\nalso, split() by default splits by whitespace (tabs and other stuff included), which means that perhaps this line should just be:\nparts \u003d line.split()",
      "range": {
        "startLine": 87,
        "startChar": 8,
        "endLine": 87,
        "endChar": 47
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b91fc1_bc1e4bf9",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "I think this is also int, so: \u003d int(parts[3])",
      "range": {
        "startLine": 89,
        "startChar": 16,
        "endLine": 89,
        "endChar": 24
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a76d768d_8199b8e4",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "convert to int (is it actually int? not float?) here:\n...  \u003d int(parts[8])",
      "range": {
        "startLine": 90,
        "startChar": 27,
        "endLine": 90,
        "endChar": 35
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6b92fc8_e19a5c4b",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "i\u0027d merge these two lines. In fact, i\u0027d perhaps write this as:\nparts \u003d line.split()\ncov.add_function(CovFunc(\n  name\u003ddemangle(parts[1]),\n  count\u003dint(parts[3]),\n  percent_executed\u003dint(parts[8])))",
      "range": {
        "startLine": 91,
        "startChar": 8,
        "endLine": 92,
        "endChar": 34
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5358c1d_7a488701",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "consider raising exception instead:\n\nraise ValueError(\u0027Branch before line?\u0027, line_number, line)\n\n(see line 85 too)",
      "range": {
        "startLine": 99,
        "startChar": 9,
        "endLine": 101,
        "endChar": 0
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e77f71f_4d3fd5cb",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "maybe int(count_data)?",
      "range": {
        "startLine": 115,
        "startChar": 18,
        "endLine": 115,
        "endChar": 28
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04fb97b2_5943f213",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "is not",
      "range": {
        "startLine": 121,
        "startChar": 20,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1673a6ef_fd79a57c",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "argparse.ArgumentParser()",
      "range": {
        "startLine": 131,
        "startChar": 11,
        "endLine": 131,
        "endChar": 34
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87bf5c87_ad97acd6",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "remove, instead required\u003dTrue",
      "range": {
        "startLine": 132,
        "startChar": 34,
        "endLine": 132,
        "endChar": 46
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "371fbf9b_93c2d140",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "remove, instead required\u003dTrue",
      "range": {
        "startLine": 133,
        "startChar": 32,
        "endLine": 133,
        "endChar": 44
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3c12fa_abf753d9",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "remove. And if you need to validate smth, better use:\nparser.error(\u0027message\u0027)\nwhich is equivalent to what you wrote :)",
      "range": {
        "startLine": 136,
        "startChar": 1,
        "endLine": 142,
        "endChar": 0
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e01d08b1_fb53ac99",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "after all args are validated AND if you go the route of using logging:\n\nlogging.basicConfig(level\u003dlogging.{DEBUG or INFO})",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 1
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c688fe8_4cfab501",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "nit: remove 2 empty lines, leaving just 1.",
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a6dc02_ab75e67e",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "nit: file is also a buildin type in python which are are effectively aliasing. Rename to filename, and s/files/filenames",
      "range": {
        "startLine": 158,
        "startChar": 6,
        "endLine": 158,
        "endChar": 10
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8e7968e_cc6c209c",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "consider using \nlogging.info(\u0027process %s\u0027, file)\n(or logging.debug)\ninstead of print diagnostic messages. Then it\u0027s easier to filter them out later and you can get timestamps and other goodies.",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 32
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea5220a_aa557d68",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "if you raise exceptions from process_gcov_file, as I suggest, then rewrite this as:\ntry:\n  info.append(process_gcov_file(file))\nexcept KeyboardInterrupt:\n  # Ctrl+C was pressed.\n  raise\nexcept Exception:\n  logging.error(\u0027failed to process %s: %s\u0027, file, e)",
      "range": {
        "startLine": 160,
        "startChar": 8,
        "endLine": 160,
        "endChar": 25
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d5ee78d_3c1d5ccb",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "if d is None:",
      "range": {
        "startLine": 161,
        "startChar": 7,
        "endLine": 161,
        "endChar": 16
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa03646e_b11d7668",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "nit: here and elsewhere, singular quotes.",
      "range": {
        "startLine": 162,
        "startChar": 12,
        "endLine": 162,
        "endChar": 13
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da04e7e7_416cfb87",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "this is text file, no need for \"b\". just \"w\" is enough.",
      "range": {
        "startLine": 166,
        "startChar": 25,
        "endLine": 166,
        "endChar": 26
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa2eb60e_d12be573",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "consider splitting this into a new function.",
      "range": {
        "startLine": 166,
        "startChar": 2,
        "endLine": 166,
        "endChar": 6
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8806987f_cf34c311",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "OK, this works, i\u0027d grant you that :)\nWe generally use some kind of templating system (like jinja2), but it requires instlaling a new python package, so maybe this is perfect for your use case.",
      "range": {
        "startLine": 167,
        "startChar": 4,
        "endLine": 179,
        "endChar": 3
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc8587ff_62b6ebfd",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "no escaping, which is perhaps OK for your purpose. This why I\u0027d use templating system if possible.",
      "range": {
        "startLine": 184,
        "startChar": 28,
        "endLine": 184,
        "endChar": 39
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c291531_779ff063",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "if you want multiline strings you can do it this way:\n index.write(\n    \u0027longish string which will be just a single line \u0027\n    \u0027that\u0027s why there is space before quote above, but you can add \\n\u0027\n    \u0027manually if necessary to get a new line\u0027)",
      "range": {
        "startLine": 184,
        "startChar": 76,
        "endLine": 184,
        "endChar": 77
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf12785_a04a1457",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "if you make it float, perhaps this is better: \u0027%.0f\u0027 % i.coverage()\nwhich will render 99.123 as \u002799\u0027 and 5.9 as \u00276\u0027",
      "range": {
        "startLine": 185,
        "startChar": 11,
        "endLine": 185,
        "endChar": 28
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "200c1521_88cdba3f",
        "filename": "testing/tools/cover.py",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 6130
      },
      "writtenOn": "2017-01-26T16:31:03Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 192,
        "startChar": 43,
        "endLine": 192,
        "endChar": 44
      },
      "revId": "5a6072cd5c424837954554db6da8382ddba9ad79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}