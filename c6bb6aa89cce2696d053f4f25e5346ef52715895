{
  "comments": [
    {
      "key": {
        "uuid": "6fd637c5_b830760d",
        "filename": "testing/tools/gold.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-11-16T21:02:51Z",
      "side": 1,
      "message": "If the baseline has only changed on one platform (say win) will the CL baselines have _all_ the baselines, or just the new windows baseline? If the latter, this won\u0027t work as we\u0027d still need to check the master baselines.",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 38
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4242cd80_f19d9fac",
        "filename": "testing/tools/gold.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 6545
      },
      "writtenOn": "2017-11-16T21:18:16Z",
      "side": 1,
      "message": "In this case the baseline in \"changeLists\" will only contain the new win baselines. But this code captures that since self._baselines contains the master and CL baseline. \nSee lines 92-101 above.",
      "parentUuid": "6fd637c5_b830760d",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 38
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a73b937e_e52e0faf",
        "filename": "testing/tools/gold.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-11-16T21:31:50Z",
      "side": 1,
      "message": "It doesn\u0027t (currently) capture this case on purpose, I thought the baseline in \"changeLists\" would contain all the baselines rather than only the new ones. Is it fine if we don\u0027t fail on the case I detailed in our email thread (CL has an intended change, it\u0027s approved, then regresses)?",
      "parentUuid": "4242cd80_f19d9fac",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 38
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a833d682_ec32e6f8",
        "filename": "testing/tools/gold.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-11-20T20:00:15Z",
      "side": 1,
      "message": "So as per we discussed on email/chat, we will for now consider the changeLists entry will NOT contain all new baselines necessarily and the master baseline needs to be checked too. In the future we will stop using the changeLists entries and have a separate URL for each cl.",
      "parentUuid": "a73b937e_e52e0faf",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 38
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a9c51f_9f9d63da",
        "filename": "testing/tools/gold.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-11-20T21:26:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a833d682_ec32e6f8",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 38
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "407faf3b_91d562a8",
        "filename": "testing/tools/test_runner.py",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 6770
      },
      "writtenOn": "2017-11-16T20:51:46Z",
      "side": 1,
      "message": "Instead of failing for the given test, this should gather all the failing tests and after all tests have been run, fail if the list is not empty. \n\nIn the meantime could we print something to the log to indicate that we would be failing ?",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 151,
        "endChar": 16
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28945d2e_ee865e5e",
        "filename": "testing/tools/test_runner.py",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 7035
      },
      "writtenOn": "2017-11-20T21:26:54Z",
      "side": 1,
      "message": "Sure, I\u0027d actually prefer that. Done.",
      "parentUuid": "407faf3b_91d562a8",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 151,
        "endChar": 16
      },
      "revId": "c6bb6aa89cce2696d053f4f25e5346ef52715895",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}