{
  "comments": [
    {
      "key": {
        "uuid": "b37f81ed_d00f816c",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-11T21:37:01Z",
      "side": 1,
      "message": "Just to be sure, could you test this fuzzer against an input that was successfully parsed before? I\u0027m not sure why we can remove the FromUTF8 call.",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aa1d2de_ec5f9d82",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T01:09:03Z",
      "side": 1,
      "message": "As far as I know, clusterfuzz doesn\u0027t provide UTF8. It just provides data. I\u0027d used FromUTF8 before because that was how I knew to get a string to a WideString which I needed to call the CXFA_WideTextRead constructor. It looks like this was more complicated then needed and we can just pass the data through a memory stream.",
      "parentUuid": "b37f81ed_d00f816c",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fccf6ead_c1c4d85b",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-12T17:07:03Z",
      "side": 1,
      "message": "Ok, but we can really help the fuzzer out here by not letting it generate things that are going to get caught early on before hitting the more interesting internals.\n\nFromUTF8 wasn\u0027t our friend because it\u0027s too easy to generate things that flunk decoding, esp. with long strings.  Can\u0027t remember if our decoder tries to re-sync, skipping the offense, or just gives us.\n\nWhat we know is:\nFor windows, wchar is 16bits, simply munging it together 2 bytes into 1 should be ok.\nFor other platforms wchar is 32bits, but only 2^21 are legal (??? presumably).  So we\u0027d like to munge 3 bytes into 1 and mask the top.  Of course, we might want some illegal chars in the mess, but if they are handled properly, and fail early, then having too many of them hamstrings the fuzzer.  We don\u0027t want to artificially hamstring the fuzzer.\n\nThis looks to be a good candiate for a helper method in the test_support code we have in testing/",
      "parentUuid": "0aa1d2de_ec5f9d82",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd33d0d5_0d88646d",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T17:19:37Z",
      "side": 1,
      "message": "Was there something that needed to be done in this CL? Or is this followup work? (Not really sure what you\u0027re proposing to add).\n\nI believe this is the right input to the syntax parser, as it takes uint8 data. There is a second wrapper that I merged in later that was CXFA_WideTextRead which deals with wide strings, we could switch to using that if we wanted?",
      "parentUuid": "fccf6ead_c1c4d85b",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33611416_d0c877bd",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 5495
      },
      "writtenOn": "2017-04-12T17:21:44Z",
      "side": 1,
      "message": "No, if the parser wants uint8_t then giving it such is fine.  I thought it wanted a widestring always",
      "parentUuid": "dd33d0d5_0d88646d",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aac32297_5ecd2d40",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-12T14:21:08Z",
      "side": 1,
      "message": "shouldn\u0027t this be the size?",
      "range": {
        "startLine": 15,
        "startChar": 73,
        "endLine": 15,
        "endChar": 75
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9e016dd_c2121600",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T14:23:50Z",
      "side": 1,
      "message": "Maybe? That\u0027s what it passed before so I\u0027m leaving it as is.",
      "parentUuid": "aac32297_5ecd2d40",
      "range": {
        "startLine": 15,
        "startChar": 73,
        "endLine": 15,
        "endChar": 75
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93470cb_8dd17444",
        "filename": "testing/libfuzzer/pdf_cfx_saxreader_fuzzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T15:32:53Z",
      "side": 1,
      "message": "Checked the code again, the -1 input will tell the parser to use the Size of the file - the start value, start here is 0 so we should get the whole file.",
      "parentUuid": "a9e016dd_c2121600",
      "range": {
        "startLine": 15,
        "startChar": 73,
        "endLine": 15,
        "endChar": 75
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d14a3e3b_e5f1aa0c",
        "filename": "xfa/fde/xml/cfde_xmlsyntaxparser_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-11T21:37:01Z",
      "side": 1,
      "message": "Rebase needed",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609f6ce8_c1fa541c",
        "filename": "xfa/fde/xml/cfde_xmlsyntaxparser_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T01:09:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d14a3e3b_e5f1aa0c",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02a2bd76_fd6f430a",
        "filename": "xfa/fxfa/cxfa_ffapp_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-11T21:37:01Z",
      "side": 1,
      "message": "I\u0027d rather have the MakeSeekableReadStream, looks cleaner",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d39e637a_f8f9c90c",
        "filename": "xfa/fxfa/cxfa_ffapp_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T01:09:03Z",
      "side": 1,
      "message": "It looks a bit cleaner, but I don\u0027t think it\u0027s clearer. This is obvious that we\u0027re making a CXFA_FileRead which wasn\u0027t obvious at all before.",
      "parentUuid": "02a2bd76_fd6f430a",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62376d27_60b21622",
        "filename": "xfa/fxfa/cxfa_ffapp_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-12T14:21:08Z",
      "side": 1,
      "message": "Why does that need to be obvious if it\u0027s wrapped in the IFX_SeekableReadStream?",
      "parentUuid": "d39e637a_f8f9c90c",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee473acd_015c3228",
        "filename": "xfa/fxfa/cxfa_ffapp_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T14:23:50Z",
      "side": 1,
      "message": "If, for some reason, we start reading the wrong values, it\u0027s helpful to know which of the classes it\u0027s using to buffer that data. With multiple MakeSeekableReadStream methods it\u0027s really hard to know what\u0027s going on. Seeing this is a CXFA_FileRead I can jump straight to the class and see what\u0027s up.\n\nIFX_SeekableReadStream tells me the interface, but it doesn\u0027t help me if I need to debug the implementation.",
      "parentUuid": "62376d27_60b21622",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eca8299_beead696",
        "filename": "xfa/fxfa/cxfa_ffapp_unittest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T15:32:53Z",
      "side": 1,
      "message": "Better?",
      "parentUuid": "ee473acd_015c3228",
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64616eb2_f9c532cf",
        "filename": "xfa/fxfa/cxfa_fileread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-11T21:37:01Z",
      "side": 1,
      "message": "Followup: could this take uint8_t*?",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22f9110_72f835dd",
        "filename": "xfa/fxfa/cxfa_fileread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T01:09:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64616eb2_f9c532cf",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1834e128_43fe7a26",
        "filename": "xfa/fxfa/cxfa_fileread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 6295
      },
      "writtenOn": "2017-04-11T21:37:01Z",
      "side": 1,
      "message": "nit: static_cast",
      "range": {
        "startLine": 51,
        "startChar": 13,
        "endLine": 51,
        "endChar": 23
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3378d6ab_b5285bc9",
        "filename": "xfa/fxfa/cxfa_fileread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5965
      },
      "writtenOn": "2017-04-12T01:09:03Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "1834e128_43fe7a26",
      "range": {
        "startLine": 51,
        "startChar": 13,
        "endLine": 51,
        "endChar": 23
      },
      "revId": "1e9fedddcf3a25b1b5bda1c7fa17633b9aa67b09",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}